import { users } from "../../data/users";import { store } from "../../redux/store";import { logout as logoutAction } from "../../redux/slices/userSlice";import { clearCart } from "../../redux/slices/cartSlice";import { clearWishlistAction } from "../../redux/slices/wishlistSlice";export async function hashPassword(password) {    const encoder = new TextEncoder();    const data = encoder.encode(password);    const hashBuffer = await crypto.subtle.digest('SHA-256', data);    const hashArray = Array.from(new Uint8Array(hashBuffer));    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');    return hashHex;}export async function authenticate(email, password) {    const hashedPassword = await hashPassword(password);    const user = users.find(user => user.email === email);    if (!user) {        return { success: false, message: "User not found" };    }    if (user.password !== hashedPassword) {        return { success: false, message: "Incorrect password" };    }    return { success: true, user: user };}export function logout() {    store.dispatch(logoutAction());    store.dispatch(clearCart());    store.dispatch(clearWishlistAction());    window.location.href = `/`;}